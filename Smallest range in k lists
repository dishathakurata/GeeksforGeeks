//Smallest range in k lists

import java.io.*;
import java.lang.*;
import java.util.*;

public class DriverClass {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while(t-- > 0) {
            int n = sc.nextInt();
            int k = sc.nextInt();
            int arr[][] = new int[k][n];

            for(int i = 0; i < k; i++) {
                for(int j = 0; j < n; j++) {
                    arr[i][j] = sc.nextInt();
                }
            }

            ArrayList<Integer> range = new Solution().findSmallestRange(arr);
            System.out.println(range.get(0) + " " + range.get(1));
            System.out.println("~");
        }
    }
}

class Solution {
    public ArrayList<Integer> findSmallestRange(int[][] arr) {
        int k = arr.length;
        int[] pointers = new int[k];
        ArrayList<Integer> smallestRange = new ArrayList<>(Arrays.asList(0, Integer.MAX_VALUE));

        while(true) {
            int currentMin = Integer.MAX_VALUE, currentMax = Integer.MIN_VALUE;
            int minListIndex = -1;

            for(int i = 0; i < k; i++) {
                int value = arr[i][pointers[i]];

                if(value < currentMin) {
                    currentMin = value;
                    minListIndex = i;
                }

                if(value > currentMax) {
                    currentMax = value;
                }
            }

            if(currentMax - currentMin < smallestRange.get(1) - smallestRange.get(0)) {
                smallestRange.set(0, currentMin);
                smallestRange.set(1, currentMax);
            }

            pointers[minListIndex]++;
            
            if(pointers[minListIndex] == arr[minListIndex].length) {
                break;
            }
        }

        return smallestRange;
    }
}
